stages:
  - build
  - deploy

.staging_ssh: &staging_ssh |
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY_STAGING" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  ssh-keyscan $HOST_STAGING >> ~/.ssh/known_hosts
  chmod 644 ~/.ssh/known_hosts


build-staging:
  stage: build
  image: docker:18.09
  services:
    - docker:18.09-dind
  # variables:
  #   DOCKER_DRIVER: overlay2
  #   DOCKER_TLS_CERTDIR: ""
  #   DOCKER_HOST: tcp://docker:2375
  # dependencies:
  #   - get-env-staging
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --no-cache jq
  script:
    - echo "$MY_SECRET_ENV_JSON" | jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' >> .env
    # - jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' echo "$MY_SECRET_ENV_JSON" >> .env
    - docker build -t $CI_REGISTRY_IMAGE:latest . 
    - docker push $CI_REGISTRY_IMAGE:latest 
    # - |
    #   for VAR in $(echo "$MY_SECRET_ENV_JSON" | jq -r 'to_entries[] | "\(.key)=\(.value)"')
    #   do build_args+=(--build-arg "$VAR")
    #   done
    # - docker build "${build_args[@]}" -t $DOCKER_IMAGE .
    # - docker push $DOCKER_IMAGE
  tags:
    - "pc-private-runner"
  only:
    - main

deploy-staging:
  stage: deploy

  before_script:
    - "command -v ssh-agent >/dev/null || ( apk add openssh )"

  script:
    - *staging_ssh
    - ssh -t $HOST_USER_STAGING@$HOST_STAGING "sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    # - ssh -t $HOST_USER_STAGING@$HOST_STAGING "
    #   sudo docker container stop $PROJECT_NAME;
    #   sudo docker container rm $PROJECT_NAME;
    #   sudo docker rmi $CI_REGISTRY_IMAGE:latest"
    - ssh -t $HOST_USER_STAGING@$HOST_STAGING "sudo docker pull $CI_REGISTRY_IMAGE:latest"
    - ssh -t $HOST_USER_STAGING@$HOST_STAGING "sudo docker-compose -f /home/chica/web/chica-staging/docker-compose.yml up -d"

  tags:
    - "chica_runner"

  only:
    - main



# - export MY_SECRET_JSON
#     - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD registry.gitlab.com
#     - docker build \
#         $(echo "$MY_SECRET_JSON" | jq -r 'to_entries[] | "--build-arg \(.key)=\(.value)")' \
#         -t $DOCKER_IMAGE .
#     - docker push $DOCKER_IMAGE


# stages:
#   - build
#   - deploy

# .staging_ssh: &staging_ssh |
#   eval $(ssh-agent -s)
#   echo "$SSH_PRIVATE_KEY_STAGING" | tr -d '\r' | ssh-add - > /dev/null
#   mkdir -p ~/.ssh
#   chmod 700 ~/.ssh
#   ssh-keyscan $HOST_STAGING >> ~/.ssh/known_hosts
#   chmod 644 ~/.ssh/known_hosts

# build-staging:
#   stage: build
#   image: docker:18.09
#   services:
#     - docker:18.09-dind

#   before_script:
#     - export MY_SECRET_ENV_JSON
#     - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#   script:
#     - docker build \
#       $(echo "$MY_SECRET_ENV_JSON" | jq -r 'to_entries[] | "--build-arg \(.key)=\(.value)")' \
#       -t $DOCKER_IMAGE .
#     - docker push $DOCKER_IMAGE
#   tags:
#     - "pc-private-runner"
#   only:
#     - main

# deploy-staging:
#   stage: deploy

#   before_script:
#     - "command -v ssh-agent >/dev/null || ( apk add openssh )"

#   script:
#     - *staging_ssh
#     - ssh -t $HOST_USER_STAGING@$HOST_STAGING "sudo docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
#     - ssh -t $HOST_USER_STAGING@$HOST_STAGING "sudo docker pull $CI_REGISTRY_IMAGE:latest"
#     - ssh -t $HOST_USER_STAGING@$HOST_STAGING "sudo docker-compose -f /home/chica/web/chica-staging/docker-compose.yml up -d"

#   tags:
#     - "chica_runner"

#   only:
#     - main
